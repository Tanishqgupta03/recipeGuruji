name: Deploy Next.js Application

on:
  push:
    branches:
      - main  # Trigger workflow on push to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source code
      - name: Checkout Source
        uses: actions/checkout@v4

      # Step 2: Create the .env file
      - name: Create .env file
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" >> .env

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Match your Next.js projectâ€™s Node.js version

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build the Next.js application
      - name: Build the application
        run: npm run build

      # Step 6: Deploy the application using Docker
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t <your-dockerhub-username>/nextjs-app:latest .

      - name: Push Docker image to Docker Hub
        run: docker push <your-dockerhub-username>/nextjs-app:latest

      # Step 7: Deploy to AWS EC2 instance (optional)
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull <your-dockerhub-username>/nextjs-app:latest
            docker stop nextjs-app || true
            docker rm nextjs-app || true
            docker run -d -p 80:3000 --name nextjs-app <your-dockerhub-username>/nextjs-app:latest
